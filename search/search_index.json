{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#bem-vindo-a-documentacao-sobre-o-meu-projeto-de-devops-e-cicd","title":"Bem vindo a documenta\u00e7\u00e3o sobre o meu projeto de Devops e CI/CD!","text":"<p>Irei te ensinar como voc\u00ea pode instalar e fazer o \"deploy\" de aplica\u00e7\u00f5es web com Git, Jenkins, Ansible e Docker.</p> <ul> <li>Para facilitar a compreens\u00e3o, recomendo que voc\u00ea analise esse diagrama que mostra como vai funcionar a comunica\u00e7\u00e3o entre os servidores:</li> </ul> <p></p>"},{"location":"#configurando-os-servidores","title":"Configurando os servidores","text":"<p>Nota: Primeiramente, voc\u00ea precisa ter 3 servidores, um para o jenkins, outro para o ansible e o outro para a aplica\u00e7\u00e3o que desejamos instalar.</p>"},{"location":"#configure-o-arquivo-hosts-dos-nodes","title":"Configure o arquivo hosts dos nodes","text":"<p>No seu server, voc\u00ea deve declarar quem \u00e9 o ansible-node, quem \u00e9 o jenkins-node e quem \u00e9 o webapp-node para atribuir um IP \u00e0 esses nodes.</p> <p>Para fazer isso voc\u00ea deve alterar o arquivo \"hosts\", para isso, execute o seguinte comando: <code>nano /etc/hosts</code></p> <ul> <li>Agora voc\u00ea pode modificar o arquivo, use meu arquivo hosts como refer\u00eancia.</li> </ul> <pre><code>127.0.0.1   localhost\n127.0.1.1   ansible-node\n172.24.9.81 jenkins-node\n172.24.9.80 webapp-node\n\n# LEMBRE-SE! Mude os IPs e os hostnames de acordo com sua necessidade, um IP e hostname que sirvam para mim podem n\u00e3o servir para voc\u00ea e vice-versa.\n</code></pre>"},{"location":"#crie-uma-chave-ssh-para-os-nodes","title":"Crie uma chave SSH para os nodes","text":"<p>Antes de tudo, voc\u00ea deve mudar uma linha em um arquivo de configura\u00e7\u00e3o do sistema, execute o seguinte comando:</p> <pre><code>nano /etc/ssh/sshd_config\n\n# Altere a linha que cont\u00e9m \"PermitRootLogin\", ela deve ficar desse jeito:\nPermitRootLogin yes\n</code></pre> <p>Para aplicar as altera\u00e7\u00f5es feitas, reinicie o servi\u00e7o de sshd, voc\u00ea pode usar o comando <code>sudo systemctl restart sshd</code></p> <p>Para a conex\u00e3o do cluster funcionar, precisamos da chave SSH. Somente assim as m\u00e1quinas poder\u00e3o comunicar-se entre si com seguran\u00e7a e agilidade. Execute o seguinte comando nos dois nodes para gerar a chave SSH:</p> <pre><code>ssh-keygen -t ed25519\n# Agora \u00e9 s\u00f3 apertar \"enter\" at\u00e9 cansar\n</code></pre> <p>Ap\u00f3s isso, vamos criar um arquivo de configura\u00e7\u00e3o ssh nos dois nodes para automatizar a \"passagem\" das chaves SSH de um node para o outro. Crie um arquivo de configura\u00e7\u00e3o ssh com o comando <code>nano ~/.ssh/config</code></p> <pre><code>Host ansible-node\n    Hostname ansible-node\n    User root\nHost jenkins-node\n    Hostname jenkins-node\n    User root\nHost webapp-node\n    Hostname webapp-node\n    User root\n\n# LEMBRE-SE! Mude o 'Host' e 'hostname' de acordo com sua necessidade\n</code></pre> <p>Al\u00e9m disso, mude as permiss\u00f5es do arquivo de configura\u00e7\u00e3o nos dois nodes com <code>chmod 600 ~/.ssh/config</code></p> <p>Por fim, execute esses comandos, nos tr\u00eas servers, para \"enviar\" a chave ssh de um node para o outro:</p> <pre><code>ssh-copy-id ansible-node\nssh-copy-id jenkins-node\nssh-copy-id webapp-node\n</code></pre> <p>Aten\u00e7\u00e3o: Para que a chave ssh seja autenticada pelo Jenkins, em cada node, voc\u00ea deve acessar cada servidor manualmente via ssh, exemplo:</p> <p><code>ssh root@ansible-node</code></p> <p><code>ssh root@jenkins-node</code></p> <p><code>ssh root@webapp-node</code></p>"},{"location":"#instalando-o-jenkins-no-jenkins-node","title":"Instalando o Jenkins no jenkins-node","text":"<p>Voc\u00ea pode instalar o Jenkins com o script que eu disponibilizei no reposit\u00f3rio devops-ci-cd-project. H\u00e1 duas maneiras que voc\u00ea pode ter acesso ao script:</p> <ul> <li>1\u00b0 Op\u00e7\u00e3o: Clone o reposit\u00f3rio para fazer o download do script.</li> </ul> <pre><code>git clone https://github.com/EduardoVasconceloss/devops-ci-cd-project.git\ncd devops-ci-cd-project\n./install-jenkins.sh\n</code></pre> <ul> <li>2\u00b0 Op\u00e7\u00e3o: Crie o arquivo do script localmente com o comando <code>nano install-jenkins.sh</code> e cole o c\u00f3digo abaixo no arquivo criado.</li> </ul> <pre><code>#!/bin/bash\n# Script de instala\u00e7\u00e3o do Jenkins no Debian 12\n\ncurl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \\\n    /usr/share/keyrings/jenkins-keyring.asc &gt; /dev/null\n\necho deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \\\n    https://pkg.jenkins.io/debian-stable binary/ | sudo tee \\\n    /etc/apt/sources.list.d/jenkins.list &gt; /dev/null\n\nsudo apt update -y\nsudo apt install -y fontconfig openjdk-17-jre-headless openjdk-17-jre\nsudo apt install -y jenkins\n</code></pre> <p>Lembre-se: Se voc\u00ea optar por fazer a 2\u00b0 op\u00e7\u00e3o, voc\u00ea deve mudar as permiss\u00f5es do arquivo \"install-jenkins.sh\" com o comando <code>chmod +x install-jenkins.sh</code>. Agora para executar o script basta executar <code>./install-jenkins.sh</code></p>"},{"location":"#instalando-o-ansible-e-docker-no-ansible-node","title":"Instalando o Ansible e Docker no ansible-node","text":"<p>Nota: Voc\u00ea pode instalar o Ansible e o Docker com os scripts que eu disponibilizei no reposit\u00f3rio devops-ci-cd-project.</p> <ul> <li>1\u00b0 Op\u00e7\u00e3o: Clone o reposit\u00f3rio para fazer o download do script.</li> </ul> <pre><code>git clone https://github.com/EduardoVasconceloss/devops-ci-cd-project.git\ncd devops-ci-cd-project\n./install-ansible.sh\n./install-docker.sh\n</code></pre> <ul> <li> <p>2\u00b0 Op\u00e7\u00e3o: Crie os arquivos de script localmente com os comandos <code>nano install-ansible.sh</code> e <code>nano install-docker.sh</code>. Agora cole os c\u00f3digos abaixo nos seus respectivos arquivos criados:</p> </li> <li> <p>Script de instala\u00e7\u00e3o do Ansible:</p> </li> </ul> <pre><code>#! /bin/bash\n\n# Aten\u00e7\u00e3o: esse script foi criado para instalar o ansible no Debian 12.\n\n# Atualiza os reposit\u00f3rios, pacotes e instala o Ansible.\nsudo apt update -y\nsudo apt install -y ansible \n\n# Verifica a vers\u00e3o do Ansible instalada\nansible --version\n\n# Verifica se o diret\u00f3rio /etc/ansible existe e cria caso n\u00e3o exista\nif [ ! -d \"/etc/ansible\" ] \nthen\n    sudo mkdir /etc/ansible\nfi\n\n# Verifica se o arquivo ansible.cfg existe e remove caso exista\nif [ -e \"/etc/ansible/ansible.cfg\" ]\nthen\n    sudo rm /etc/ansible/ansible.cfg\nfi\n\n# Cria o arquivo ansible.cfg\necho [defaults] | sudo tee /etc/ansible/ansible.cfg\necho inventory = /etc/ansible/hosts | sudo tee -a /etc/ansible/ansible.cfg\necho remote_user = root | sudo tee -a /etc/ansible/ansible.cfg\necho private_key_file = /root/.ssh/id_ed25519 | sudo tee -a /etc/ansible/ansible.cfg\n\n# Verifica se o arquivo hosts existe e remove caso exista\nif [ -e \"/etc/ansible/hosts\" ]\nthen\n    sudo rm /etc/ansible/hosts\nfi\n\n# Cria o arquivo hosts\necho [ansible-node] | sudo tee /etc/ansible/hosts\necho &lt;ip-do-ansible-node&gt; | sudo tee -a /etc/ansible/hosts  # Coloque o IP do ansible-node\necho [webapp-node] | sudo tee -a /etc/ansible/hosts\necho &lt;ip-do-webapp-node&gt; | sudo tee -a /etc/ansible/hosts # Coloque o IP do webapp-node\n</code></pre> <ul> <li>Script de instala\u00e7\u00e3o do Docker:</li> </ul> <pre><code>#!/bin/bash\n\n# Aten\u00e7\u00e3o: esse script foi criado para instalar o ansible no Debian.\n\n# Atualiza os reposit\u00f3rios e pacotes\nsudo apt update -y\n\n# Instala depend\u00eancias para permitir que o APT use reposit\u00f3rios HTTPS\nsudo apt install -y apt-transport-https ca-certificates curl software-properties-common\n\n# Adiciona a chave GPG oficial do Docker\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# Configura o reposit\u00f3rio est\u00e1vel do Docker\necho \"deb [signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list\n\n# Atualiza os reposit\u00f3rios mais uma vez\nsudo apt update -y\n\n# Instala o Docker Engine\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-compose \n\n# Adiciona o usu\u00e1rio atual ao grupo do docker para executar comandos Docker sem o \"sudo\"\nsudo usermod -aG docker $USER\n\n# Habilita e inicia o servi\u00e7o do Docker\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Verifica a vers\u00e3o do Docker instalada\ndocker --version\n</code></pre> <p>Lembre-se: Se voc\u00ea optar por fazer a 2\u00b0 op\u00e7\u00e3o, voc\u00ea deve mudar as permiss\u00f5es dos arquivos <code>install-ansible.sh</code> e <code>install-docker.sh</code> com os comandos <code>chmod +x install-ansible.sh</code> e <code>chmod +x install-docker.sh</code>. Agora para executar os scripts basta rodar os comandos <code>./install-ansible.sh</code> e <code>./install-docker.sh</code>.</p>"},{"location":"#configurando-o-ansible-e-docker-no-ansible-node","title":"Configurando o Ansible e Docker no ansible-node","text":"<p>Voc\u00ea deve editar o arquivo de configura\u00e7\u00e3o do ansible para que possamos executar o playbook sem problemas.</p> <ul> <li>Acesse o diret\u00f3rio do ansible com o comando <code>cd /etc/ansible/</code> e altere o arquivo de configura\u00e7\u00e3o do ansible com o comando <code>nano ansible.cfg</code>.</li> </ul> <pre><code># O seu \"ansible.cfg\" deve estar com essa configura\u00e7\u00e3o:\n[defaults]\ninventory = /etc/ansible/hosts\nremote_user = root\nprivate_key_file = /root/.ssh/id_ed25519\n</code></pre> <ul> <li>Agora altere seu arquivo \"hosts\" para que o ansible se conecte com outros servidores.</li> </ul> <pre><code>[ansible-node]\n&lt;IP-do-ansible-node&gt;\n\n[jenkins-node]\n&lt;IP-do-jenkins-node&gt;\n\n[webapp-node]\n&lt;IP-do-webapp-node&gt;\n</code></pre> <ul> <li>Por fim, fa\u00e7a o login com sua conta do Dockerhub para ter poder fazer o upload de suas imagens.</li> </ul> <pre><code>docker login\n</code></pre>"},{"location":"#instalando-e-configurando-o-docker-no-webapp-node","title":"Instalando e configurando o Docker no webapp-node","text":"<p>Nota: Voc\u00ea pode instalar o Ansible e o Docker com os scripts que eu disponibilizei no reposit\u00f3rio devops-ci-cd-project.</p> <ul> <li>1\u00b0 Op\u00e7\u00e3o: Clone o reposit\u00f3rio para fazer o download do script.</li> </ul> <pre><code>git clone https://github.com/EduardoVasconceloss/devops-ci-cd-project.git\ncd devops-ci-cd-project\n./install-docker.sh\n</code></pre> <ul> <li> <p>2\u00b0 Op\u00e7\u00e3o: Crie o arquivo do script localmente com o comando <code>nano install-docker.sh</code>. Agora cole o c\u00f3digo abaixo nos arquivo criado:</p> </li> <li> <p>Script de instala\u00e7\u00e3o do Docker:</p> </li> </ul> <pre><code>#!/bin/bash\n\n# Aten\u00e7\u00e3o: esse script foi criado para instalar o ansible no Debian.\n\n# Atualiza os reposit\u00f3rios e pacotes\nsudo apt update -y\n\n# Instala depend\u00eancias para permitir que o APT use reposit\u00f3rios HTTPS\nsudo apt install -y apt-transport-https ca-certificates curl software-properties-common\n\n# Adiciona a chave GPG oficial do Docker\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# Configura o reposit\u00f3rio est\u00e1vel do Docker\necho \"deb [signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list\n\n# Atualiza os reposit\u00f3rios mais uma vez\nsudo apt update -y\n\n# Instala o Docker Engine\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-compose \n\n# Adiciona o usu\u00e1rio atual ao grupo do docker para executar comandos Docker sem o \"sudo\"\nsudo usermod -aG docker $USER\n\n# Habilita e inicia o servi\u00e7o do Docker\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Verifica a vers\u00e3o do Docker instalada\ndocker --version\n</code></pre> <p>Lembre-se: Se voc\u00ea optar por fazer a 2\u00b0 op\u00e7\u00e3o, voc\u00ea deve mudar as permiss\u00f5es do arquivo <code>install-docker.sh</code> com o comando <code>chmod +x install-docker.sh</code>. Agora para executar o script basta rodar o comando <code>./install-docker.sh</code>.</p> <ul> <li>Por fim, fa\u00e7a o login na sua conta do Dockerhub.</li> </ul> <pre><code>docker login\n</code></pre>"},{"location":"jenkins/","title":"Configurando o Jenkins","text":"<ul> <li>Ap\u00f3s instalar o Jenkins, \u00e9 necess\u00e1rio configur\u00e1-lo pelo navegador.</li> </ul>"},{"location":"jenkins/#acesse-a-aplicacao-do-jenkins","title":"Acesse a aplica\u00e7\u00e3o do Jenkins","text":"<p>Digite o IP do servidor do Jenkins no seu navegador de prefer\u00eancia.</p> <ul> <li>Exemplo: <code>&lt;http://ip-do-server-jenkins:8080&gt;</code>.</li> </ul>"},{"location":"jenkins/#destrave-o-jenkins","title":"\"Destrave\" o Jenkins","text":"<ul> <li> <p>1\u00b0 passo: Copie o caminho e cole no seu terminal para ter acesso a senha, Exemplo: <code>cat /var/lib/jenkins/secrets/initialAdminPassword</code></p> </li> <li> <p>2\u00b0 passo: Copie a senha que foi mostrada no seu terminal e cole no campo \"Administrator password\".</p> </li> </ul>"},{"location":"jenkins/#customize-o-jenkins","title":"Customize o Jenkins","text":"<ul> <li>Clique em \"Install suggested plugins\" para a instalar alguns plugins b\u00e1sicos e recomendados pelo Jenkins.</li> </ul>"},{"location":"jenkins/#criando-um-admin-user-para-o-jenkins","title":"Criando um Admin User para o Jenkins","text":"<p>Para acessar e configurar o Jenkins, \u00e9 necess\u00e1rio criar um usu\u00e1rio com as permiss\u00f5es de um Administrador.</p> <p></p> <ul> <li> <p>1\u00b0 passo: Digite seu nome de usu\u00e1rio.</p> </li> <li> <p>2\u00b0 passo: Digite sua senha e confirme ela no campo abaixo.</p> </li> <li> <p>3\u00b0 passo: Digite seu nome completo.</p> </li> <li> <p>4\u00b0 passo: Digite seu endere\u00e7o de e-mail.</p> </li> </ul>"},{"location":"jenkins/#gerenciando-o-jenkins","title":"Gerenciando o Jenkins","text":"<p>Agora, iremos come\u00e7ar a etapa inicial de gerenciamento. \u00c9 preciso gerenciar o Jenkins para que ele possa usar as ferramentas e plugins necess\u00e1rios.</p> <p></p> <ul> <li> <p>1\u00b0 passo: No canto esquerdo, clique em \"Gerenciar jenkins\".</p> </li> <li> <p>2\u00b0passo: Na se\u00e7\u00e3o de \"Configura\u00e7\u00e3o do sistema\" voc\u00ea deve achar e clicar na op\u00e7\u00e3o \"System\".</p> </li> </ul>"},{"location":"jenkins/#adicionando-os-servidores","title":"Adicionando os servidores","text":"<p>Para que o Jenkins possa ter conex\u00e3o com os servidores que n\u00f3s vamos utilizar, \u00e9 preciso adicionar cada servidor ao sistema do Jenkins.</p> <p></p> <ul> <li> <p>1\u00b0 passo: Dentro da se\u00e7\u00e3o \"System\", voc\u00ea deve procurar a sub-se\u00e7\u00e3o chamada \"SSH Servers\", ap\u00f3s ter achado a sub-se\u00e7\u00e3o, digite o nome do seu servidor no campo \"Name\".</p> </li> <li> <p>2\u00b0 passo: Digite o IP do seu servidor no campo \"Hostname\" para que o Jenkins possa acessar o servidor via SSH.</p> </li> <li> <p>3\u00b0 passo: No campo \"Username\", digite o usu\u00e1rio que o Jenkins ir\u00e1 utilizar para logar no servidor. No nosso caso, iremos utilizar o usu\u00e1rio \"root\".</p> </li> <li> <p>4\u00b0 passo: Clique na op\u00e7\u00e3o \"Avan\u00e7ado\", marque a caixa \"Use password authentication, or use a different key\". Ap\u00f3s isso, digite a senha de acesso para o usu\u00e1rio \"root\" do seu servidor.</p> </li> </ul> <p>Por fim, precisamos adicionar os outros dois servidores (jenkins-node e webapp-node). Para isso, clique na op\u00e7\u00e3o \"Adicionar\" e repita os tr\u00eas primeiros passos, alterando as informa\u00e7\u00f5es para seus respectivos servidores.</p> <p>Observa\u00e7\u00e3o: Voc\u00ea pode testar a conex\u00e3o do Jenkins com os servidores. Basta clicar na op\u00e7\u00e3o \"Test Configuration\" ap\u00f3s ter seguido os tr\u00eas primeiros passos acima.</p>"},{"location":"jenkins/#gerenciando-os-plugins","title":"Gerenciando os plugins","text":"<p>No Jenkins, \u00e9 poss\u00edvel adicionar plugins para facilitar a utiliza\u00e7\u00e3o de algumas ferramentas. No nosso caso, iremos adicioanr um plugin relacionado ao SSH.</p> <p></p> <ul> <li> <p>1\u00b0 passo: Na p\u00e1gina inicial do Jenkins, voc\u00ea deve clicar em \"Gerenciar Jenkins\".</p> </li> <li> <p>2\u00b0 passo: Agora clique em \"Plugins\" para visualizar os plugins que o Jenkins disponibiliza para uso.</p> </li> </ul> <p></p> <ul> <li> <p>1\u00b0 passo: Clique em \"Extens\u00f5es dispon\u00edveis\".</p> </li> <li> <p>2\u00b0 passo: Digite \"Publish Over SSH\" para encontrar o plugin necess\u00e1rio.</p> </li> <li> <p>3\u00b0 passo: Marque o campo para instalar o plugin.</p> </li> <li> <p>4\u00b0 passo: Clique em \"Baixar agora e instalar ap\u00f3s rein\u00edcio\".</p> </li> </ul> <p>Nota: \u00c9 necess\u00e1rio reiniciar o Jenkins ap\u00f3s a instala\u00e7\u00e3o do plugin.</p>"},{"location":"jenkins/#criando-uma-tarefa","title":"Criando uma tarefa","text":"<p>Uma tarefa serve para automatizar uma s\u00e9rie de etapas em um pipeline de CI/CD. Essas etapas incluem o checkout do c\u00f3digo de um reposit\u00f3rio git, a compila\u00e7\u00e3o do c\u00f3digo, a execu\u00e7\u00e3o de testes automatizados e etc.</p> <p></p> <ul> <li>1\u00b0 passo: No \"Painel de controle\" do Jenkins, clique em \"Nova tarefa\".</li> </ul> <p></p> <ul> <li> <p>1\u00b0 passo: Escolha um nome para sua tarefa. Como esse projeto tem o intuito de fazer o deploy do Bookstack, eu escolhi o nome \"bookstack\" para a tarefa.</p> </li> <li> <p>2\u00b0 passo: Selecione o campo \"Construir um projeto de software de estilo livre.\"</p> </li> <li> <p>3\u00b0 passo: Por fim, clique na op\u00e7\u00e3o \"Tudo certo\".</p> </li> </ul>"},{"location":"jenkins/#configurando-a-tarefa","title":"Configurando a tarefa","text":"<p>Ap\u00f3s criar a tarefa, falta configurar\u00e1-la.</p>"},{"location":"jenkins/#adicionando-o-codigo-fonte","title":"Adicionando o c\u00f3digo fonte","text":"<p>Vamos adicionar os nossos arquivos necess\u00e1rios para o deploy do Bookstack ao Jenkins via Git.</p> <p></p> <ul> <li> <p>1\u00b0 passo: Clique no campo \"Gerenciamento de c\u00f3digo fonte\".</p> </li> <li> <p>2\u00b0 passo: Marque o campo \"Git\".</p> </li> <li> <p>3\u00b0 passo: Cole o link do seu reposit\u00f3rio do github.</p> </li> <li> <p>4\u00b0 passo: Selecione a branch do seu reposit\u00f3rio, no meu caso \u00e9 a \"main\".</p> </li> </ul>"},{"location":"jenkins/#enviando-o-codigo-fonte-para-os-servidores","title":"Enviando o c\u00f3digo-fonte para os servidores.","text":"<p>Os \"passos de constru\u00e7\u00e3o\" em uma tarefa do Jenkins s\u00e3o comandos ou scripts que s\u00e3o executados para realizar uma parte espec\u00edfica do processo de constru\u00e7\u00e3o ou implanta\u00e7\u00e3o. Eles s\u00e3o a parte central de uma tarefa do Jenkins, pois definem as a\u00e7\u00f5es que devem ser executadas quando a tarefa \u00e9 executada.</p> <p></p> <ul> <li> <p>1\u00b0 passo: Clique na se\u00e7\u00e3o \"Passos de constru\u00e7\u00e3o\" e procure a sub-se\u00e7\u00e3o chamada \"SSH Publishers\".</p> </li> <li> <p>2\u00b0 passo: Selecione o servidor onde o passo de constru\u00e7\u00e3o ser\u00e1 executado, no momento, vamos escolher o \"jenkins-node\".</p> </li> <li> <p>3\u00b0 passo: No campo \"Exec command\", cole os seguintes comandos:</p> </li> </ul> <pre><code>rsync -avh /var/lib/jenkins/workspace/bookstack/* root@ansible-node:/root &amp;&amp; rsync -avh /var/lib/jenkins/workspace/bookstack/docker-compose.yml root@webapp-node:/root\n</code></pre> <p>Agora \u00e9 s\u00f3 clicar em \"Aplicar\" e depois clique em \"Salvar\".</p> <ul> <li>3.1\u00b0 passo: \u00c9 preciso \"Construir\" a nossa tarefa para que ela seja executada.</li> </ul> <p></p> <p>Nota: No 3\u00b0 passo, estamos enviando os arquivos do nosso reposit\u00f3rio git para o diret\u00f3rio \"/root\" do servidor \"ansible-node\" e tamb\u00e9m estamos enviando os arquivos \"docker-compose.yml\" para o diret\u00f3rio \"/root\" do servidor \"webapp-node\".</p> <p></p> <ul> <li> <p>4\u00b0 passo: Adicione mais um passo de constru\u00e7\u00e3o e selecione o servidor \"ansible-node\".</p> </li> <li> <p>5\u00b0 passo: No campo \"Exec command\", cole os seguintes comandos:</p> </li> </ul> <pre><code>cd /root\nansible-playbook -vvv ansible-deploy.yml\n</code></pre> <p></p> <ul> <li> <p>6\u00b0 passo: No campo \"Exec timeout (ms)\", mude o valor para \"0\".</p> </li> <li> <p>7\u00b0 passo: Aplique as altera\u00e7\u00f5es feitas.</p> </li> <li> <p>8\u00b0 passo: Por fim, basta salvar sua tarefa.</p> </li> </ul>"},{"location":"jenkins/#constuindo-a-tarefa-criada","title":"Constuindo a tarefa criada","text":"<p>Depois de tudo estar configurado, \u00e9 hora de fazer a m\u00e1gica acontercer, precisamos construir a tarefa \"bookstack\".</p> <p></p> <ul> <li> <p>1\u00b0 Passo: Clique em \"Construir agora\" para come\u00e7ar a constru\u00e7\u00e3o da tarefa.</p> </li> <li> <p>2\u00b0 Passo: Perceba que a sua constru\u00e7\u00e3o vai aparecer no canto inferior esquerdo. Clique no \u00edcone que aparece \u00e0 esquerda da \"numera\u00e7\u00e3o\" da sua tarefa.</p> </li> </ul> <p>Ap\u00f3s realizar esses dois passos, voc\u00ea ir\u00e1 ver os logs da constru\u00e7\u00e3o da sua tarefa.</p> <p></p> <p>Se tudo correr bem, voc\u00ea vai ver a sa\u00edda \"Finished: SUCCESS\", isso quer dizer que a constru\u00e7\u00e3o da tarefa foi finalizada e n\u00e3o foram encontrados erros durante o processo.</p>"}]}